plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
    id 'java'
}

group = 'me.kycho'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.modelmapper:modelmapper:3.0.0'

    // OAuth 2.0 Authorization Server 기능은 아직 Spring Security에서 지원하지 않음. ( 결국 나중에는 지원할 예정임 )
    // Spring Security OAuth 프로젝트에서는 가능한데 아래의 라이브러리를 사용하면 Spring Security OAuth를 사용 가능함.
    // https://docs.spring.io/spring-boot/docs/2.6.3/reference/htmlsingle/#web.security.oauth2.authorization-server
    // https://mvnrepository.com/artifact/org.springframework.security.oauth.boot/spring-security-oauth2-autoconfigure
    implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.6.3'


    // https://mvnrepository.com/artifact/org.springframework.security/spring-security-test
    testImplementation 'org.springframework.security:spring-security-test'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'com.h2database:h2'
}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    dependsOn test
}

bootJar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}") {
        into 'BOOT-INF/classes/static/docs'
    }
}

//https://docs.gradle.org/7.3.3/dsl/org.gradle.api.tasks.Copy.html#N20D2C
//task copyDocs(type: Copy) {
//    dependsOn asciidoctor
//    from 'build/docs/asciidoc'
//    into 'build/resources/main/static/docs'
//}
//
//bootJar {
//    dependsOn copyDocs
//}
